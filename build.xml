<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="meeno" default="jar">

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value="-encoding UTF-8 -source 8 -parameters"/>
    <property name="compiler.max.memory" value="700m"/>

    <property name="out.dir" value="${basedir}/out"/>
    <property name="out.production.dir" value="${out.dir}/production"/>
    <property name="out.test.dir" value="${out.dir}/test"/>

    <target name="clean">
        <delete dir="${out.dir}"/>
    </target>

    <target name="ivy.install">
        <property name="user.ant.lib" value="${user.home}/.ant/lib"/>
        <property name="ivy.install.version" value="2.3.0"/>
        <mkdir dir="${user.ant.lib}"/>
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${user.ant.lib}" usetimestamp="true"/>
    </target>

    <property name="lib.dir" value="${basedir}/lib/production"/>
    <property name="lib.src.dir" value="${basedir}/lib/source"/>
    <property name="test.lib.dir" value="${basedir}/lib/test"/>

    <target name="resolve">
        <ivy:retrieve type="jar,bundle" conf="default" sync="true"
                      pattern="${lib.dir}/[artifact]-[revision].[ext]"/>
        <ivy:retrieve type="jar,bundle" conf="test" sync="true"
                      pattern="${test.lib.dir}/[artifact]-[revision].[ext]"/>
    </target>

    <target name="resolve.sources">
        <ivy:retrieve conf="sources" sync="true"
                      pattern="${lib.src.dir}/[artifact]-[revision]-[type].[ext]"/>
    </target>

    <patternset id="library.patterns">
        <include name="*.jar"/>
    </patternset>

    <path id="lib.classpath">
        <fileset dir="${lib.dir}">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <target name="compile.sources" depends="resolve">
        <mkdir dir="${out.production.dir}"/>
        <javac destdir="${out.production.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
            <compilerarg line="${compiler.args}"/>
            <classpath refid="lib.classpath"/>
            <src path="${basedir}/src"/>
        </javac>
    </target>

    <path id="tests.classpath">
        <pathelement location="${out.production.dir}"/>
        <pathelement location="${out.test.dir}"/>
        <path refid="lib.classpath"/>
        <fileset dir="${test.lib.dir}">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <target name="compile.tests" depends="compile.sources">
        <mkdir dir="${out.test.dir}"/>
        <javac destdir="${out.test.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" includeantruntime="false">
            <compilerarg line="${compiler.args}"/>
            <classpath refid="tests.classpath"/>
            <src path="${basedir}/test"/>
        </javac>
    </target>

    <target name="test" depends="clean, compile.tests">
        <junit printsummary="no" fork="yes" haltonfailure="no" failureproperty="test.failed">
        <classpath refid="tests.classpath"/>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="${out.test.dir}">
                <fileset dir="${out.test.dir}">
                    <include name="snowmonkey/**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
        <fail message="Test failure detected, check test results." if="test.failed"/>
    </target>

    <target name="jar" depends="clean, compile.sources">
        <jar destfile="out/${ant.project.name}.jar">
        <fileset dir="${out.production.dir}"/>
        </jar>
    </target>

</project>